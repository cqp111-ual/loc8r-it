networks:
  sonar_nw:
    driver: bridge
  traefik-proxy:
    external: true

services:
  sonarqube-app:
    image: sonarqube:latest
    container_name: sonarqube-app
#    ports:
#      - "9000:9000"
    env_file:
      - .env
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/${SONAR_DB_NAME:-sonarqube}
      - SONAR_JDBC_USERNAME=${SONAR_DB_USER:-user}
      - SONAR_JDBC_PASSWORD=${SONAR_DB_PASS:-pass123}
    networks:
      - sonar_nw
      - traefik-proxy
    depends_on:
      - sonarqube-db
    restart: unless-stopped
    volumes:
      # sudo chown -R 1000:1000 sonarqube/
      - ./sonarqube:/opt/sonarqube/data
    labels:
      - "traefik.enable=true"
      - "traefik.providers.docker.network=traefik-proxy"
      - "traefik.http.services.sonarqube-service.loadbalancer.server.port=9000"
      - "traefik.http.routers.sonarqube-http.rule=Host(`sonarqube.cqp111-ual.tech`)"
      - "traefik.http.routers.sonarqube-http.entrypoints=web"
      - "traefik.http.routers.sonarqube-http.middlewares=redirect-to-https@file"
      - "traefik.http.routers.sonarqube-https.rule=Host(`sonarqube.cqp111-ual.tech`)"
      - "traefik.http.routers.sonarqube-https.entrypoints=websecure"
      - "traefik.http.routers.sonarqube-https.tls=true"
    mem_limit: 4g
    cpus: 2

  sonarqube-db:
    image: postgres:14
    container_name: sonarqube-db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${SONAR_DB_NAME:-sonarqube}
      - POSTGRES_USER=${SONAR_DB_USER:-user}
      - POSTGRES_PASSWORD=${SONAR_DB_PASS:-pass123}
    networks:
      - sonar_nw
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
    mem_limit: 128m
    cpus: 0.35